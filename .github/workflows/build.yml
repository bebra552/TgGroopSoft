name: Build TgGroop Application

on:
 push:
   branches: [ master ]
 workflow_dispatch:

jobs:
 build-macos:
   runs-on: macos-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Set up Python
     uses: actions/setup-python@v5
     with:
       python-version: '3.11'

   - name: Install system dependencies
     run: |
       brew install pkg-config

   - name: Upgrade pip and install build tools
     run: |
       python -m pip install --upgrade pip
       pip install --upgrade setuptools wheel
       pip install pyinstaller

   - name: Install Python dependencies from requirements.txt
     run: |
       pip install --no-cache-dir -r requirements.txt

   - name: Verify installations
     run: |
       python -c "import pyrogram; print('Pyrogram installed successfully')"
       python -c "import asyncio; print('Asyncio available')"

   - name: Build application with PyInstaller
     run: |
       pyinstaller --onefile --windowed \
         --name TgGroop \
         --distpath dist \
         --workpath build \
         --specpath . \
         --hidden-import pyrogram \
         --hidden-import pyrogram.client \
         --hidden-import pyrogram.errors \
         --hidden-import PyQt6 \
         --hidden-import PyQt6.QtCore \
         --hidden-import PyQt6.QtGui \
         --hidden-import PyQt6.QtWidgets \
         --hidden-import asyncio \
         --hidden-import csv \
         --hidden-import logging \
         --hidden-import pathlib \
         --hidden-import io \
         --exclude-module tkinter \
         --exclude-module matplotlib \
         --exclude-module numpy.tests \
         --exclude-module pandas.tests \
         --noconfirm \
         src/main.py

   - name: Create app bundle structure for macOS
     run: |
       mkdir -p dist/TgGroop.app/Contents/MacOS
       mkdir -p dist/TgGroop.app/Contents/Resources
       mv dist/TgGroop dist/TgGroop.app/Contents/MacOS/

   - name: Create Info.plist for macOS app
     run: |
       cat > dist/TgGroop.app/Contents/Info.plist << 'EOF'
       <?xml version="1.0" encoding="UTF-8"?>
       <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
       <plist version="1.0">
       <dict>
         <key>CFBundleExecutable</key>
         <string>TgGroop</string>
         <key>CFBundleIdentifier</key>
         <string>com.tggroop.parser</string>
         <key>CFBundleName</key>
         <string>TgGroop</string>
         <key>CFBundleVersion</key>
         <string>2.1</string>
         <key>CFBundleShortVersionString</key>
         <string>2.1</string>
         <key>CFBundleInfoDictionaryVersion</key>
         <string>6.0</string>
         <key>CFBundlePackageType</key>
         <string>APPL</string>
         <key>LSMinimumSystemVersion</key>
         <string>10.14</string>
         <key>NSHighResolutionCapable</key>
         <true/>
       </dict>
       </plist>
       EOF

   - name: Make executable
     run: |
       chmod +x dist/TgGroop.app/Contents/MacOS/TgGroop

   - name: Create DMG
     run: |
       mkdir -p dist/dmg
       cp -r dist/TgGroop.app dist/dmg/
       hdiutil create -volname "TgGroop" -srcfolder dist/dmg -ov -format UDZO dist/TgGroop.dmg

   - name: Upload macOS build
     uses: actions/upload-artifact@v4
     with:
       name: TgGroop-macOS
       path: |
         dist/TgGroop.app
         dist/TgGroop.dmg
       retention-days: 30

   - name: Upload build logs on failure
     if: failure()
     uses: actions/upload-artifact@v4
     with:
       name: build-logs-macos
       path: |
         build/
         *.spec
       retention-days: 7

 build-windows:
   runs-on: windows-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v4

   - name: Set up Python
     uses: actions/setup-python@v5
     with:
       python-version: '3.10'

   - name: Upgrade pip and install build tools
     run: |
       python -m pip install --upgrade pip
       pip install --upgrade setuptools wheel
       pip install pyinstaller==5.13.2

   - name: Install Python dependencies
     run: |
       pip install PyQt5==5.15.10
       pip install pyrogram==2.0.106
       pip install TgCrypto==1.2.5

   - name: Update main.py to use PyQt5
     run: |
       $content = Get-Content -Path "src/main.py" -Raw
       $content = $content -replace "from PyQt6", "from PyQt5"
       $content = $content -replace "PyQt6", "PyQt5"
       Set-Content -Path "src/main.py" -Value $content
     shell: powershell

   - name: Verify installations
     run: |
       python -c "from PyQt5 import QtCore; print('PyQt5 version:', QtCore.QT_VERSION_STR)"
       python -c "import pyrogram; print('Pyrogram installed successfully')"

   - name: Build application with PyInstaller
     run: |
       pyinstaller --onefile --windowed ^
         --name TgGroop ^
         --distpath dist ^
         --workpath build ^
         --specpath . ^
         --hidden-import pyrogram ^
         --hidden-import pyrogram.client ^
         --hidden-import pyrogram.errors ^
         --hidden-import PyQt5 ^
         --hidden-import PyQt5.QtCore ^
         --hidden-import PyQt5.QtGui ^
         --hidden-import PyQt5.QtWidgets ^
         --hidden-import asyncio ^
         --hidden-import csv ^
         --hidden-import logging ^
         --hidden-import pathlib ^
         --hidden-import io ^
         --exclude-module tkinter ^
         --exclude-module matplotlib ^
         --noconfirm ^
         src/main.py
     shell: cmd

   - name: Upload Windows build
     uses: actions/upload-artifact@v4
     with:
       name: TgGroop-Windows  
       path: |
         dist/TgGroop.exe
       retention-days: 30

   - name: Upload build logs on failure
     if: failure()
     uses: actions/upload-artifact@v4
     with:
       name: build-logs-windows
       path: |
         build/
         *.spec
       retention-days: 7
